{
  "COUNT_INPROGRESSISSUES_NEWBRANCH": {
    "collector": {
      "infrastructurePath": "internal.collector.events",
      "endpoint": "/api/v2/computations",
      "type": "POST-GET-V1",
      "config": {
        "scopeManager": "http://host.docker.internal:5700/api/v1/scopes/development"
      }
    },
    "measure": {
      "computing": "actual",
      "element": {
        "count": {
          "related": {
            "githubGQL": {
              "custom": {
                "type": "graphQL",
                "title": "Get issues in progress",
                "steps": {
                  "0": {
                    "type": "queryGetObject",
                    "query": "{\r\n  repository(owner: \"%PROJECT.github.repoOwner%\", name: \"%PROJECT.github.repository%\") {\r\n    projectsV2(first: 5) {\r\n      nodes {\r\n        items(first: 100) {\r\n          nodes {\r\n            content {\r\n              ... on Issue {\r\n                bodyText\r\n                updatedAt\r\n                number\r\n                author {\r\n                  login\r\n                }\r\n              }\r\n            }\r\n            fieldValues(first: 10) {\r\n              nodes {\r\n                ... on ProjectV2ItemFieldRepositoryValue {\r\n                  field {\r\n                    ... on ProjectV2Field {\r\n                      name\r\n                    }\r\n                  }\r\n                  repository {\r\n                    nameWithOwner\r\n                  }\r\n                }\r\n                ... on ProjectV2ItemFieldTextValue {\r\n                  text\r\n                  field {\r\n                    ... on ProjectV2Field {\r\n                      name\r\n                    }\r\n                  }\r\n                }\r\n                ... on ProjectV2ItemFieldSingleSelectValue {\r\n                  name\r\n                  updatedAt\r\n                  creator {\r\n                    login\r\n                  }\r\n                  field {\r\n                    ... on ProjectV2SingleSelectField {\r\n                      name\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
                    "cache": true
                  },
                  "1": {
                    "type": "runScript",
                    "variables": {},
                    "script": "module.exports.generic = function getDoneIssues(inputData, variables) {\r\n    return inputData.data.repository.projectsV2.nodes.map(project => project.items.nodes).flat()\r\n}"
                  },
                  "2": {
                    "type": "objectsFilterObjects",
                    "filters": [
                      "fieldValues.nodes.*any*.name == 'In Progress'"
                    ]
                  },
                  "3": {
                    "type": "runScript",
                    "variables": {},
                    "script": "module.exports.generic = function getInProgressIssuesContent(inputData,variables)  {\r\n    return inputData.filter(issue => issue.content.number != null).map(issue => {issue.content.payloadDate = issue.fieldValues.nodes.find(fieldValue => fieldValue?.field?.name === 'Status').updatedAt; issue.content.number = '/' + issue.content.number; return issue.content})\r\n}"
                  }
                }
              }
            },
            "window": 3600
          }
        }
      },
      "event": {
        "github": {
          "events": {
            "type": "CreateEvent",
            "payload": {
              "ref_type": "branch",
              "ref": "#CONTAINS(number)#"
            }
          }
        }
      },
      "scope": {
        "project": {
          "name": "Project",
          "description": "Project",
          "type": "string",
          "default": "class01-GH-cs169_fa23-TPA-5"
        },
        "class": {
          "name": "Class",
          "description": "Group some Projects",
          "type": "string",
          "default": "class01"
        }
      }
    }
  }
}
